/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface;

import Business.Car;
import Business.CarRecord;
import java.awt.CardLayout;
import static java.lang.Boolean.FALSE;
import static java.lang.Boolean.TRUE;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author manasa
 */
/*******
 * LOGIC TO CHECK THE LIVE LOCATION OF CAR FROM POINT A TO B
 * We could have a new record called carSchedule. In the record we store 
 * CAR DESCRIPTION,CAR MAKE,NUMBER OF PASSENGERS, PASSANGERS PENDING, ON RIDE(YES/NO),CAR LOCATION(ZIPCODE).
 * WHILE BOOKING OF RIDE - WE NEED TO ASK THE CUSTOMER TO FILL IN CITY DETAIL- THIS DATA WE WILL TAKE TO UPDATE THE PASSENGER 
 * TRAVEL ZIPCODE. AFTER ALL THE SEATS GET FILLED, THERE ARE TWO ACTIONS:
 * 1. ON RIDE IS SET TO TRUE
 * 2. WE WILL CHECK ALL THE PASSENGERS ZIPCODE AND GO IN THE FLOW . 
 * 3. WE WILL ESTIMATE TIME BASED ON DIFFERENCE IN DISTANCE - AND KEEP UPDATING PASSENGER NUMBER AND 
 * ZIPCODE IN carSchedule(BY HAVING SLEEP TIME FOR TRAVEL TIME). 
 * USING THIS METHOD - WE CAN DETERMINE THE CAR CURRENT LOCATION .
 * USING THIS APPROACH - WE CAN FIND THE ESTIMATED TIME FOR INDIVIDUAL AND TOTAL JOURNEY.
 * We need to have a new field called - ZIPCODE in the C
 * 
 * 
 * 
 * 
 * @author manasa
 */
public class BookRideJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CreateJPanel
     */
    private CarRecord carRecord;
    private JPanel userProcessContainer;

    public BookRideJPanel(JPanel userProcessContainer, CarRecord carRecord) {
        initComponents();
        this.carRecord = carRecord;
        this.userProcessContainer = userProcessContainer;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblCreateAccount = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCustName = new javax.swing.JTextField();
        txtTravelCity = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtSeatsReq = new javax.swing.JTextField();
        txtBook = new javax.swing.JButton();
        btnBack = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(102, 0, 0));
        setPreferredSize(new java.awt.Dimension(1000, 600));

        lblCreateAccount.setFont(new java.awt.Font("Superclarendon", 3, 24)); // NOI18N
        lblCreateAccount.setForeground(new java.awt.Color(204, 204, 204));
        lblCreateAccount.setText("BOOK YOUR RIDE NOW!");

        jLabel2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(204, 204, 204));
        jLabel2.setText("NAME:");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(204, 204, 204));
        jLabel3.setText("PHONE NO:");
        jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel4.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(204, 204, 204));
        jLabel4.setText("CITY OF TRAVEL:");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        jLabel5.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(204, 204, 204));
        jLabel5.setText("NUMBER OF SEATS:");
        jLabel5.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        txtCustName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustNameActionPerformed(evt);
            }
        });

        txtPhone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPhoneActionPerformed(evt);
            }
        });

        txtBook.setText("BOOK A RIDE");
        txtBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBookActionPerformed(evt);
            }
        });

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(204, 204, 204));
        jLabel1.setText("All the fields are Mandatory!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 138, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(120, 120, 120)
                        .addComponent(lblCreateAccount, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(42, 42, 42)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(132, 132, 132)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)))
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtCustName)
                            .addComponent(txtPhone)
                            .addComponent(txtTravelCity)
                            .addComponent(txtSeatsReq)
                            .addComponent(txtBook, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(335, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblCreateAccount))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtCustName, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTravelCity, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSeatsReq, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBook, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap(254, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtCustNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustNameActionPerformed

    private void txtPhoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPhoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPhoneActionPerformed

    private void txtBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBookActionPerformed
        // TODO add your handling code here:
        boolean booked = FALSE;
        String error = "";
        if(txtCustName.getText().equalsIgnoreCase("")){
            error="\nCustomer Name is Mandatory!";
        }
        if(txtTravelCity.getText().equalsIgnoreCase("")){
            error+="\nTravelling City is mandatory!";
        }
        if(txtPhone.getText().equalsIgnoreCase("")){
            error+="\nPhone Number is mandatory!";
        }
        if(txtSeatsReq.getText().equalsIgnoreCase("")){
            error+="\nNumber of Passengers field is mandatory!";
        }
        if(!error.equalsIgnoreCase("")){
            JOptionPane.showMessageDialog(null,error);
        }else{
            String nameRegex = "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$";
            Pattern namePattern = Pattern.compile(nameRegex);
            Matcher checkName = namePattern.matcher(txtCustName.getText());
            boolean checkNameMatch = checkName.matches();
            if(!(checkNameMatch == TRUE)){
                error ="\nCustomer name needs to be valid - only Alphabets and Spaces allowed!";
            }
            String cityRegex = "^[a-zA-Z][a-zA-Z ]+[a-zA-Z]$";
            Pattern cityPattern = Pattern.compile(cityRegex);
            Matcher checkCity = cityPattern.matcher(txtTravelCity.getText());
            boolean checkCityMatch = checkCity.matches();
            if(!(checkCityMatch == TRUE)){
                error ="\nCity Travelling needs to be valid - only Alphabets and Spaces allowed!";
            }
            String numRegex = "^[0-9]+$";
            Pattern numPattern = Pattern.compile(numRegex);
            Matcher checkNum= numPattern.matcher(txtPhone.getText());
            boolean checkNumMatch = checkNum.matches();
            if(!(checkNumMatch == TRUE)){
                error ="\nPhone number needs to be digits only!";
            }
            Matcher checkNum2= numPattern.matcher(txtSeatsReq.getText());
            boolean checkNum2Match = checkNum2.matches();
            if(!(checkNum2Match == TRUE)){
                error +="\nNumber of Passengers needs to be digits only!";
            }

            if(!error.equalsIgnoreCase("")){
                JOptionPane.showMessageDialog(null,error);
            }else{
                 int confirmed = JOptionPane.showConfirmDialog(null, "Travel Summary:\nName:"+txtCustName.getText()+"\n"
                         + "Phone:"+txtPhone.getText()+"\nTravel City:"+txtTravelCity.getText()+"\n"
                         + "No of Passengers:"+txtSeatsReq.getText()+"\nDo you confirm the Booking?","Confirm Booking",JOptionPane.YES_NO_OPTION);
                 if(confirmed == JOptionPane.YES_OPTION){
                     String make = "";
                     String desc = "";
                     boolean carNotAvail = TRUE;
                     boolean seatNotAvail = TRUE;
                     
 /* Logic to search whether cars are available for the given travel city 
    If available program will further check if customer required seats are available.     
         */
 
                for(Car car: carRecord.getCarList()){
                  if(car.getCarCity().equalsIgnoreCase(txtTravelCity.getText())){
                     carNotAvail = FALSE;
                   }
                 } 
                if(!carNotAvail){            
                for(Car car: carRecord.getCarList()){
                  if(car.getCarCity().equalsIgnoreCase(txtTravelCity.getText())){
                    if((car.getSeatsAvail()>= Integer.parseInt(txtSeatsReq.getText())) && (seatNotAvail)){
                        make = car.getCarMake();
                        desc = car.getCarDesc();
                       car.setSeatsAvail(car.getSeatsAvail()-Integer.parseInt(txtSeatsReq.getText()));
                       seatNotAvail = FALSE;
                       if(car.getSeatsAvail() == 0){
                           car.setCarAvailability(false);
                        }
                    }
                   }
                }  
                    if(seatNotAvail){
                     JOptionPane.showMessageDialog(null,"Unfortunately the required seats are not available currently.\nPlease come back and book after sometime!");
                    }else{
                     JOptionPane.showMessageDialog(null,"Booked Succesfully!\nSummary:\nName:"+txtCustName.getText()+"\n"
                         + "Phone:"+txtPhone.getText()+"\nTravel City:"+txtTravelCity.getText()+"\n"
                         + "No of Passengers:"+txtSeatsReq.getText()+"\nCar Description:"+desc+"\nCar Make:"+make);
                    }    
             }else{
             JOptionPane.showMessageDialog(null,"We do not have Car services for the mentioned travel City.\nWe apologize for the inconvenience caused!");           
             }

   }    
         }
        }
    }//GEN-LAST:event_txtBookActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        // TODO add your handling code here:
        userProcessContainer.remove(this);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_btnBackActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnBack;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel lblCreateAccount;
    private javax.swing.JButton txtBook;
    private javax.swing.JTextField txtCustName;
    private javax.swing.JTextField txtPhone;
    private javax.swing.JTextField txtSeatsReq;
    private javax.swing.JTextField txtTravelCity;
    // End of variables declaration//GEN-END:variables
}
